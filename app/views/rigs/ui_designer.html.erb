<%= javascript_tag do %>
	window.definedWidgets = JSON.parse('<%= raw @defined_widgets.to_json %>');
  <% if @rig.ui_json.nil? %>
    window.uiJSON = {};
  <% else %>
    window.uiJSON = JSON.parse('<%= raw @rig.ui_json.gsub("'", %q(\\\')) %>');
  <% end %>
<% end %>

<div>

  <div class="col-md-2" id="side-bar">
    <h3>Wigdets</h3>

    <small>Drag and drop the widgets onto the canvas on the right.</small>

    <hr>

    <% @defined_widgets.each do |key, value| %>
      <div class="row">
        <img class="thumbnail defined-widget" src="<%= value[:image] %>" id="<%= key %>"/>
      </div>
    <% end %>

    <hr>

    <div class="row centerize">
      <%= simple_form_for(@rig) do |f| %>
        <%= f.hidden_field :ui_json %>
      <% end %>

      <a class="btn btn-success btn-lg" id="save-ui">Save</a>
      <a class="btn btn-danger btn-lg" href="<%= rig_path(@rig) %>">Cancel</a>
    </div>
  </div>


  <div class="col-md-10">
    <div class="gridster thumbnail" id="canvas">
      <!-- widgets goes inside the ul -->
      <ul>
      </ul>

    </div>
  </div>

</div>

</div>

<div class="modal fade" id="settings-modal" tabindex="-1" role="dialog" aria-labelledby="settings-modal" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Settings</h4>
      </div>
      <div class="modal-body">
        <form id="switch-form" style="display: none;">
          <label for="slaveModule">Slave Module</label>
          <select name="slaveModule" class="form-control">
            <% @switchable_slaves.each do |s| %>
              <option value="<%= s.id %>"><%= "#{s.s_type.titleize} at address #{s.s_addr}" %></option>
            <% end %>
          </select>

          <label for="pin">Switch Port</label>
          <select name="pin" class="form-control">
            <% (3..13).to_a.each do |i| %>
              <option value="<%= i %>"><%= "Port #{i}" %></option>
            <% end %>
          </select>

          <label for="name">Name</label>
          <input name="name" class="form-control"></input>
        </form>

        <form id="chart-form" style="display: none;">
          <label for="slaveModule">Slave Module</label>
          <select name="slaveModule" class="form-control">
            <% @chartable_slaves.each do |s| %>
              <option value="<%= s.id %>"><%= "#{s.s_type.titleize} at address #{s.s_addr}" %></option>
            <% end %>
          </select>

					<label for="pin">Slave Port</label>
          <select name="pin" class="form-control">
            <% (0..3).to_a.each do |i| %>
              <option value="<%= i %>"><%= "Port #{i}" %></option>
            <% end %>
          </select>

          <label for="name">Name</label>
          <input name="name" class="form-control"></input>

          <label for="xAxis">X Axis</label>
          <input name="xAxis" class="form-control"></input>

          <label for="yAxis">Y Axis</label>
          <input name="yAxis" class="form-control"></input>

          <label for="period">Period</label>
          <input name="period" class="form-control" type="number"></input>

          <label for="interval">Interval</label>
          <input name="interval" class="form-control" type="number"></input>

          <label for="updateRate">Update Rate</label>
          <input name="updateRate" class="form-control" type="number"></input>

        </form>

				<form id="data-log-form" style="display: none;">
          <label for="slaveModule">Slave Module</label>
          <select name="slaveModule" class="form-control">
            <% @slave_modules.each do |s| %>
              <option value="<%= s.id %>"><%= "#{s.s_type.titleize} at address #{s.s_addr}" %></option>
            <% end %>
          </select>

					<label for="pin">Slave Port</label>
          <select name="pin" class="form-control">
            <% (0..13).to_a.each do |i| %>
              <option value="<%= i %>"><%= "Port #{i}" %></option>
            <% end %>
          </select>

          <label for="name">Name</label>
          <input name="name" class="form-control"></input>
        </form>

				<form id="value-form" style="display: none;">
          <label for="slaveModule">Slave Module</label>
          <select name="slaveModule" class="form-control">
            <% @slave_modules.each do |s| %>
              <option value="<%= s.id %>"><%= "#{s.s_type.titleize} at address #{s.s_addr}" %></option>
            <% end %>
          </select>

					<label for="pin">Slave Port</label>
          <select name="pin" class="form-control">
            <% (0..13).to_a.each do |i| %>
              <option value="<%= i %>"><%= "Port #{i}" %></option>
            <% end %>
          </select>

          <label for="name">Name</label>
          <input name="name" class="form-control"></input>
        </form>

        <form id="motor-form" style="display: none;">
          <label for="slaveModule">Slave Module</label>
          <select name="slaveModule" class="form-control">
            <% @motor_slaves.each do |s| %>
              <option value="<%= s.id %>"><%= "#{s.s_type.titleize} at address #{s.s_addr}" %></option>
            <% end %>
          </select>

          <label for="name">Name</label>
          <input name="name" class="form-control"></input>
        </form>

        <form id="servo-form" style="display: none;">
          <label for="slaveModule">Slave Module</label>
          <select name="slaveModule" class="form-control">
            <% @servo_slaves.each do |s| %>
              <option value="<%= s.id %>"><%= "#{s.s_type.titleize} at address #{s.s_addr}" %></option>
            <% end %>
          </select>

          <label for="name">Name</label>
          <input name="name" class="form-control"></input>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal" id="close-settings">Close</button>
        <button type="button" class="btn btn-primary" id="save-settings">Save changes</button>
      </div>
    </div>
  </div>
</div>

<script>
  $(function() {

    var widgetNextIndex = 0;

    var gridster = $(".gridster ul").gridster({
      widget_margins: [10, 10],
      widget_base_dimensions: [250, 165],
      resize: {enabled: true},
      serialize_params: function ($w, wgd) {
        return {
          id: parseInt($($w).attr('id')),
          type: $($w).data('type'),
          settings: $($w).data('settings'),
          col: wgd.col,
          row: wgd.row,
          size_x: wgd.size_x,
          size_y: wgd.size_y
        };
      }
    }).data('gridster');

    $('.defined-widget').draggable({
      revert: true
    });

    $('#canvas').droppable({
      accept: '.defined-widget',
      drop: function(event, ui) {
        var widgetType = ui.draggable.attr('id');
        while ($('.widget-in#' + widgetNextIndex).length != 0) {
          widgetNextIndex++
        }
        addWidgetToCanvas(widgetType, widgetNextIndex);
      }
    });

    rebuildWidgetsFromJson();

    // bind the save button
    $('#save-ui').on('click', function() {
      // check that all the widgets have been configured
      if ($(".widget-in.unconfigured").length > 0) {
        alert('You must configure all widgets before saving.');
      } else {
      // generate the json string and submit the form
        $('#rig_ui_json').val(JSON.stringify(gridster.serialize()));
        $('form.edit_rig').submit();
      }
    });


    // FUNCTIONS

    function rebuildWidgetsFromJson() {
      if (window.uiJSON.length > 0) {
        $.each(window.uiJSON, function() {
          addWidgetToCanvas(this.type, this.id, this.size_x, this.size_y, this.col, this.row, this.settings);
        });

        // adjust the next indea for extra widgets
        widgetNextIndex = $('.widget-in').length;
      }
    }

    function addWidgetToCanvas(widgetType, index, size_x, size_y, col, row, settings) {
      // create and add the widget to the canvas
      if (typeof size_x == 'undefined') {
        gridster.add_widget(
          '<li class="widget-in" id="' + index + '" data-type="' + widgetType + '">' +
            '<a class="btn btn-danger pull-right delete-widget">Delete</a>' +
            '<a class="btn btn-default pull-right setting-widget">Settings</a>' +
            '<img src="' + window.definedWidgets[widgetType].image + '"/>' +
          '</li>');

        $('.widget-in#' + index).addClass('unconfigured');
      } else {
        gridster.add_widget(
          '<li class="widget-in" id="' + index + '" data-type="' + widgetType + '">' +
            '<a class="btn btn-danger pull-right delete-widget">Delete</a>' +
            '<a class="btn btn-default pull-right setting-widget">Settings</a>' +
            '<img src="' + window.definedWidgets[widgetType].image + '"/>' +
          '</li>', size_x, size_y, col, row);

        $('.widget-in#' + index).data('settings', settings);
      }

      // bind delete buttons
      $('.widget-in#' + index + ' .delete-widget').on('click', function() {
        gridster.remove_widget($(this).parent());
      })

      // bind settings buttons
      $('.widget-in#' + index + ' .setting-widget').on('click', function() {
        // setup the modal form fields and buttons
        $('.modal-body form').hide();
        $('#' + window.definedWidgets[widgetType].form).show();

        var currentId = $(this).parent().attr('id');

        // repopulate fields if defined
        document.getElementById(window.definedWidgets[widgetType].form).reset();
        var values = $(this).parent().data('settings');
        if (typeof values != 'undefined') {
          for (var i = 0; i < values.length; i++) {
            $("input[name='" + values[i].name + "']").val(values[i].value);
          }
        }

        $('#save-settings').data('widgetId', currentId);
        $('#save-settings').off('click');
        $('#save-settings').on('click', function() {
          // store json data to the widget
          var thisId = $(this).data('widgetId');
          var thisForm = $('#' + window.definedWidgets[widgetType].form);

          var formData = thisForm.serializeArray();
          $('.widget-in#' + thisId).data('settings', formData);
          $('.widget-in#' + thisId).removeClass('unconfigured');

          // reset the form
          document.getElementById(window.definedWidgets[widgetType].form).reset();

          // close the modal
          $('#settings-modal').modal('hide')
        });

        // show modal
        $('#settings-modal').modal();
      })
    }

  });



</script>
